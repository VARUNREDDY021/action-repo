name: Terraform CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  terraform:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::703671907665:role/GitHubActionsTerraformRole
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.4.0'

      - name: Check Directory Structure and Files
        run: |
          echo "Current directory:"
          pwd
          echo "\nDirectory contents:"
          ls -la
          echo "\nNetwork directory contents:"
          ls -la network || echo "network directory not found"
          echo "\nChecking for dev.tfvars:"
          ls -la dev.tfvars || echo "dev.tfvars not found"

      - name: Terraform Init (Network)
        run: |
          cd network || exit 1
          echo "Running terraform init..."
          TF_LOG=DEBUG terraform init

      - name: Terraform Validate (Network)
        if: success()
        run: |
          cd network
          terraform validate

      - name: Terraform Plan (Network)
        if: success()
        run: |
          if [ ! -f "../dev.tfvars" ]; then
            echo "Error: dev.tfvars not found in parent directory"
            ls -la ..
            exit 1
          fi
          cd network
          terraform plan -var-file="../dev.tfvars"

      - name: Terraform Apply (Network)
        if: success() && github.ref == 'refs/heads/main'
        run: |
          cd network
          terraform apply -auto-approve -var-file="../dev.tfvars"

      - name: Terraform Init (Storage)
        if: success()
        run: |
          cd storage || exit 1
          terraform init
